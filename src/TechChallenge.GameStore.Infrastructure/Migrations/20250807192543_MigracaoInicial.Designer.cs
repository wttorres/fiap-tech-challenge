// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TechChallenge.GameStore.Infrastructure._Shared;

#nullable disable

namespace TechChallenge.GameStore.Infrastructure.Migrations
{
    [DbContext(typeof(GameStoreContext))]
    [Migration("20250807192543_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.BibliotecaJogo", b =>
                {
                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.Property<int>("JogoId")
                        .HasColumnType("integer");

                    b.HasKey("UsuarioId", "JogoId");

                    b.HasIndex("JogoId");

                    b.ToTable("BibliotecaJogos", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.HistoricoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricoCompras", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.ItemCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HistoricoCompraId")
                        .HasColumnType("integer");

                    b.Property<int>("JogoId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PrecoPago")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("HistoricoCompraId");

                    b.HasIndex("JogoId");

                    b.ToTable("ItensCompra", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Jogos.Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("Nome");

                    b.ToTable("jogo", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Notificacoes.Notificacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("notificacao", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Notificacoes.NotificacaoEnviada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NotificacaoId")
                        .HasColumnType("integer");

                    b.Property<int>("PromocaoJogoId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NotificacaoId");

                    b.HasIndex("PromocaoJogoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("notificacao_enviada", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Promocoes.Promocao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("DescontoPercentual")
                        .HasColumnType("numeric");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("promocao", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Promocoes.PromocaoJogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("JogoId")
                        .HasColumnType("integer");

                    b.Property<int>("PromocaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.HasIndex("PromocaoId");

                    b.ToTable("promocao_jogo", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Perfil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("ReceberNotificacoes")
                        .HasColumnType("boolean");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.BibliotecaJogo", b =>
                {
                    b.HasOne("TechChallenge.GameStore.Domain.Jogos.Jogo", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechChallenge.GameStore.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("Biblioteca")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.HistoricoCompra", b =>
                {
                    b.HasOne("TechChallenge.GameStore.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.ItemCompra", b =>
                {
                    b.HasOne("TechChallenge.GameStore.Domain.Compras.HistoricoCompra", "HistoricoCompra")
                        .WithMany("Itens")
                        .HasForeignKey("HistoricoCompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechChallenge.GameStore.Domain.Jogos.Jogo", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistoricoCompra");

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Notificacoes.NotificacaoEnviada", b =>
                {
                    b.HasOne("TechChallenge.GameStore.Domain.Notificacoes.Notificacao", "Notificacao")
                        .WithMany("Enviadas")
                        .HasForeignKey("NotificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechChallenge.GameStore.Domain.Promocoes.PromocaoJogo", "PromocaoJogo")
                        .WithMany()
                        .HasForeignKey("PromocaoJogoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TechChallenge.GameStore.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Notificacao");

                    b.Navigation("PromocaoJogo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Promocoes.PromocaoJogo", b =>
                {
                    b.HasOne("TechChallenge.GameStore.Domain.Jogos.Jogo", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechChallenge.GameStore.Domain.Promocoes.Promocao", "Promocao")
                        .WithMany("Jogos")
                        .HasForeignKey("PromocaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Promocao");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Compras.HistoricoCompra", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Notificacoes.Notificacao", b =>
                {
                    b.Navigation("Enviadas");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Promocoes.Promocao", b =>
                {
                    b.Navigation("Jogos");
                });

            modelBuilder.Entity("TechChallenge.GameStore.Domain.Usuarios.Usuario", b =>
                {
                    b.Navigation("Biblioteca");
                });
#pragma warning restore 612, 618
        }
    }
}
